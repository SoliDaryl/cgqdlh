package sm4

import (
    "testing"
    "github.com/stretchr/testify/assert"
)


func TestNewCipher(t *testing.T){
    key := []byte{
        0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7,
        0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF,
    }

    _, err := NewCipher(key)
    assert.Nil(t, err)

    _, err = NewCipher(key[:12])
    assert.NotNil(t, err)
}

func TestEncrypt(t *testing.T){
    src := []byte{
        0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
        0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10,
    }
    result := []byte{
        0x68, 0x1e, 0xdf, 0x34, 0xd2, 0x6, 0x96, 0x5e,
        0x86, 0xb3, 0xe9, 0x4f, 0x53, 0x6e, 0x42, 0x46,
    }
    key := make([]byte, 16, 16)
    copy(key, src)

    c, err := NewCipher(key)
    assert.Nil(t, err)

    dst := make([]byte, 16, 16)
    c.Encrypt(dst, src)
    for i, n := range result {
        assert.Equal(t, n, dst[i])
    }
}
